
1
down vote
favorite
1
I have found this library and have managed to send an attachment in an empty email but not to combine text and attachments.

https://github.com/sloonz/go-mime-message

How can it be done?

smtp go
share|improve this question
asked Jun 18 '12 at 0:01

SCL
3,54542436
2 Answers activeoldestvotes
up vote
3
down vote
accepted
I ended up implementing it myself: https://github.com/scorredoira/email

Usage is very simple:

m := email.NewMessage("Hi", "this is the body")
m.From = "from@example.com"
m.To = []string{"to@example.com"}

err := m.Attach("picture.png")
if err != nil {
    log.Println(err)
}

err = email.Send("smtp.gmail.com:587", smtp.PlainAuth("", "user", "password", "smtp.gmail.com"), m)
share|improve this answer
edited Jun 19 '12 at 22:37

answered Jun 19 '12 at 18:38

SCL
3,54542436
up vote
0
down vote
Attachements in the SMTP protocol are sent using a Multipart MIME message.

So I suggest you simply

create a MultipartMessage

set your text in the fist part as a TextMessage (with "Content-Type", "text/plain")

add your attachements as parts using AddPart.

share|improve this answer
edited Jun 18 '12 at 6:32


Sending Mail
See also: http://golang.org/pkg/net/smtp/

Streaming the body:

package main

import (
        "bytes"
        "log"
        "net/smtp"
)

func main() {
        // Connect to the remote SMTP server.
        c, err := smtp.Dial("mail.example.com:25")
        if err != nil {
                log.Fatal(err)
        }
        // Set the sender and recipient.
        c.Mail("sender@example.org")
        c.Rcpt("recipient@example.net")
        // Send the email body.
        wc, err := c.Data()
        if err != nil {
                log.Fatal(err)
        }
        defer wc.Close()
        buf := bytes.NewBufferString("This is the email body.")
        if _, err = buf.WriteTo(wc); err != nil {
                log.Fatal(err)
        }
}
Authenticated SMTP:

package main

import (
        "log"
        "net/smtp"
)

func main() {
        // Set up authentication information.
        auth := smtp.PlainAuth(
                "",
                "user@example.com",
                "password",
                "mail.example.com",
        )
        // Connect to the server, authenticate, set the sender and recipient,
        // and send the email all in one step.
        err := smtp.SendMail(
                "mail.example.com:25",
                auth,
                "sender@example.org",
                []string{"recipient@example.net"},
                []byte("This is the email body."),
        )
        if err != nil {
                log.Fatal(err)
        }
}